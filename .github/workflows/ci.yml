name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Format code with black
      run: |
        pip install black
        black --check .

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 .

#    - name: Run tests
#      run: |
#        pip install pytest
#        pytest

    - name: Build Docker image from src
      run: |
        docker build -t myapp:latest -f src/Dockerfile src/

    - name: Build Docker image from ansible_test_host
      run: |
        docker build -t ansiblehost:latest -f ansible_test_host/Dockerfile ansible_test_host/

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Set up Docker Compose environment
      run: docker-compose up -d

    - name: Run application tests
      run: |
        # Here you can run any commands that will test your application against the test services
        echo "Running service tests"

    - name: Tear down Docker Compose
      if: always()
      run: docker-compose down